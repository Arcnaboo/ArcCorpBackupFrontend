@using ArcCorpEmergencyUI.Services
@inject ApiChatService ChatService
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">ArcCorp Emergency</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill"></span> Home
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <button class="btn btn-primary w-100" @onclick="HandleNewChat" disabled="@isCreatingChat">
                <span class="bi bi-plus-square-fill me-2"></span>
                @(isCreatingChat ? "Creating..." : "New Chat")
            </button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool isCreatingChat = false;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu() => collapseNavMenu = !collapseNavMenu;

    private async Task HandleNewChat()
    {
        if (isCreatingChat) return;

        isCreatingChat = true;
        StateHasChanged(); // Force UI update

        try
        {
            var result = await ChatService.CreateNewChatAsync();
            if (result?.ChatModel?.Id != null)
            {
                Navigation.NavigateTo($"/chat/{result.ChatModel.Id}", forceLoad: false);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"❌ Error creating chat: {ex.Message}");
            // Optional: Show toast/alert here
        }
        finally
        {
            isCreatingChat = false;
            StateHasChanged();
        }
    }
}